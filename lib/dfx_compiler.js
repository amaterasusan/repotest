/*
	DreamFace DFX Application Compiler
	Version: 1.0
	Author: DreamFace Interactive
	License: Commercial
	(c) 2013 DreamFace Interactive, all rights reserved.
*/

// Declaration of main modules
var mongoc = require('mongodb').MongoClient;
var fs = require('fs');
var jade = require('jade');
var AdmZip = require('adm-zip');

// Declaration of DFX modules
var dfx = require('../dfx');
var applications = require('./dfx_applications');
var screens = require('./dfx_screens');

var make = function(appname, req, callback) {

    applications.get(appname, req, function(err, app_item) {
        if (err) throw err;
        var zip = new AdmZip();

        zip.addLocalFolder('public');

        fs.readFile('templates/login.jade', 'utf8', function(err, data) {
            if (err) throw err;

            var fn = jade.compile(data);
            var body = fn({
                'appname': app_item.name,
                'apptitle': app_item.title,
                'tenantid': req.session.tenant.id,
                'server': req.protocol + '://' + req.host + ':' + dfx.server_port
            });
            zip.addFile('index.html', new Buffer(body), "generated by DFX");

            fs.readFile('templates/config.jade', 'utf8', function(err, data_cfg) {
                if (err) throw err;

                var fn_cfg = jade.compile(data_cfg);
                var body_cfg = fn_cfg({
                    application: app_item,
                    server: req.protocol + '://' + req.host + ':' + dfx.server_port
                });
                zip.addFile('config.xml', new Buffer(body_cfg), "generated by DFX");

                screens.generate(appname, 'Home', req, function(err, stream) {
                    if (err) {}
                    zip.addFile('Home.html', new Buffer(stream), "generated by DFX");
                    callback(zip);
                });
            });
        });
    });

};

exports.make = make;